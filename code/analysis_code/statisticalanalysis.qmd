### Library
```{r}
library(tidymodels)
library(vip) #most important variables in LASSO Model
library(forcats)
library(tidyverse)
```
 

```{r}

Sum_by_month_31701 = data.frame(Date = c("Sep","Oct","Nov","Dec","Jan","Feb"),
                          TOTAL_VAX_RATE = c(7797/12768, 7780/12768, 7755/12897, 7773/12897, 7792/12897, 7817/12897),
                          Intervention = c(1, 1, 1, 1, 1, 1),
                          Male_VAX_RATE = c(3371/5981, 3358/5981, 3368/5981, 3379/5981, 3387/5981, 3397/5981),
                          Female_VAX_RATE = c(4426/6787, 4422/6787, 4387/6916, 4394/6916, 4405/6916, 4420/6916),
                          Age_05_09_VAX_RATE = c(123/1058, 126/1058, 126/1058, 127/1058, 127/1058, 128/1058),
                          Age_10_17_VAX_RATE = c(642/1560, 635/1560, 633/1560, 637/1560, 630/1560, 629/1560),
                          Age_18_44_VAX_RATE = c(3310/5054, 3316/5054, 3313/5054, 3323/5054, 3325/5054, 3331/5054),
                          Age_45_64_VAX_RATE = c(3229/4628, 3244/4628, 3239/4628, 3259/4628, 3264/4628, 3258/4628),
                          Age_65Plus_VAX_RATE = c(2576/2886, 2570/2886, 2569/2886, 2574/2886, 2568/2886, 2572/2886),
                          TOTAL_RATE_DIFF = c(0, 7780/12768 - 7797/12768, 7755/12897 - 7780/12768, 7773/12897 - 7755/12897, 7792/12897 - 7773/12897, 7817/12897 - 7792/12897)) 

Sum_by_month_31705 = data.frame(Date = c("Sep","Oct","Nov","Dec","Jan","Feb"),
                                TOTAL_VAX_RATE = c(10383/21603, 10327/21572, 10303/21722, 10301/21887, 10337/21887, 10348/21887),                                 Intervention = c(1, 1, 1, 1, 1, 1),
                          Male_VAX_RATE = c(4394/9885, 4397/9854, 4399/10004, 4391/10004, 4403/10004, 4399/10004),
                          Female_VAX_RATE = c(5989/11718, 5930/11718, 5904/11718, 5910/11883, 5934/11883, 5949/11883),
                          Age_05_09_VAX_RATE = c(210/1639, 211/1639, 209/1639, 201/1639, 202/1639, 202/1639),
                          Age_10_17_VAX_RATE = c(1159/3311, 1171/3311, 1169/3311, 1163/3311, 1168/3311, 1167/3311),
                          Age_18_44_VAX_RATE = c(5201/11978, 5215/11978, 5239/11978, 5263/11978, 5278/11978, 5281/11978),
                          Age_45_64_VAX_RATE = c(4380/6468, 4381/6468, 4366/6468, 4364/6468, 4367/6468, 4367/6468),
                          Age_65Plus_VAX_RATE = c(2983/3497, 3000/3497, 2997/3497, 2997/3497, 2994/3497, 2989/3497), 
                          TOTAL_RATE_DIFF = c(0, 10327/21572 - 10383/21603, 10303/21722 - 10327/21572, 10301/21887 - 10303/21722, 10337/21887 - 10301/21887, 10348/21887 - 10337/21887))

Sum_by_month_31707 = data.frame(Date = c("Sep","Oct","Nov","Dec","Jan","Feb"),
                          TOTAL_VAX_RATE = c(9035/18045, 8985/18045, 8997/18045, 9005/18081, 9035/18081, 9042/18165),                                                       Intervention = c(1, 1, 1, 1, 1, 1),
                          Male_VAX_RATE = c(3698/8232, 3674/8232, 3678/8232, 3680/8232, 3684/8232, 3681/8232),
                          Female_VAX_RATE = c(5337/9813, 5311/9813, 5319/9813, 5325/9849, 5351/9849, 5361/9933),
                          Age_05_09_VAX_RATE = c(275/1583, 277/1702, 280/1702, 282/1702, 284/1702, 283/1702),
                          Age_10_17_VAX_RATE = c(1109/3001, 1120/3001, 1125/3001, 1134/3001, 1136/3001, 1142/3001),
                          Age_18_44_VAX_RATE = c(5903/11434, 5931/11434, 5943/11434, 5947/11434, 5960/11434, 5958/11434),
                          Age_45_64_VAX_RATE = c(5130/6051, 5120/6051, 5125/6051, 5123/6051, 5133/6051, 5140/6051),
                          Age_65Plus_VAX_RATE = c(4200/4259, 4204/4259, 4195/4259, 4206/4259, 4202/4259, 4189/4259), 
                          TOTAL_RATE_DIFF = c(0, 8985/18045 - 9035/18045, 8997/18045 - 8985/18045, 9005/18081 - 8997/18045, 9035/18081- 9005/18081, 9042/18165 - 9035/18081)) 

Sum_by_month_30815 = data.frame(Date = c("Sep","Oct","Nov","Dec","Jan","Feb"),
                          TOTAL_VAX_RATE = c(8758/19606, 8688/19736, 8639/19736, 8593/19736, 8623/19736, 8666/19736),                                                       Intervention = c(0, 0, 0, 0, 0, 0),
                          Male_VAX_RATE = c(3526/9066, 3514/9196, 3503/9196, 3484/9196, 3489/9196, 3498/9196),
                          Female_VAX_RATE = c(5232/10540, 5174/10540, 5136/10540, 5109/10540, 5134/10540, 5168/10540),
                          Age_05_09_VAX_RATE = c(201/2388, 213/2388, 211/2480, 215/2480, 211/2480, 211/2480),
                          Age_10_17_VAX_RATE = c(1116/3604, 1113/3604, 1115/3604, 1118/3604, 1115/3604, 1114/3604),
                          Age_18_44_VAX_RATE = c(5001/13358, 5009/13358, 5020/13358, 5026/13358, 5025/13358, 5032/13358),
                          Age_45_64_VAX_RATE = c(5026/8431, 5017/8431, 5020/8431, 5009/8431, 5013/8431, 5020/8431),
                          Age_65Plus_VAX_RATE = c(2816/3590, 2825/3590, 2827/3590, 2814/3590, 2828/3590, 2832/3590),
                          TOTAL_RATE_DIFF = c(0, 8688/19736 - 8758/19606, 8639/19736 - 8688/19736, 8593/19736 - 8639/19736, 8623/19736- 8593/19736, 8666/19736 - 8623/19736)) 

Sum_by_month_30907 = data.frame(Date = c("Sep","Oct","Nov","Dec","Jan","Feb"),
                          TOTAL_VAX_RATE = c(4956/9122, 4917/9189, 4888/9189, 4851/9189, 4866/9189, 4894/9189),                                                                      Intervention = c(0, 0, 0, 0, 0, 0),
                          Male_VAX_RATE = c(1947/4289, 1943/4289, 1926/4289, 1900/4289, 1913/4289, 1919/4289),
                          Female_VAX_RATE = c(3009/4833, 2974/4900, 2962/4900, 2951/4900, 2953/4900, 2975/4900),
                          Age_05_09_VAX_RATE = c(244/2174, 239/2174, 241/2174, 236/2174, 240/2174, 242/2174),
                          Age_10_17_VAX_RATE = c(1344/4070, 1358/4070, 1357/4070, 1341/4070, 1343/4070, 1335/4070),
                          Age_18_44_VAX_RATE = c(9203/14571, 9217/14571, 9238/14571, 9245/14571, 9253/14571, 9246/14571),
                          Age_45_64_VAX_RATE = c(6740/10362, 6700/10362, 6667/10362, 6626/10362, 6617/10362, 6624/10362),
                          Age_65Plus_VAX_RATE = c(6632/6995, 6633/6995, 6639/6995, 6635/6995, 6633/6995, 6623/6995), 
                          TOTAL_RATE_DIFF = c(0, 4917/9189 - 4956/9122, 4888/9189 - 4917/9189, 4851/9189 - 4888/9189, 4866/9189 - 4851/9189, 4894/9189 - 4866/9189)) 


#combining all of the zip codes into one data set except for the 30907 data 
combined = rbind(Sum_by_month_31701, Sum_by_month_31705, Sum_by_month_31707, Sum_by_month_30815,Sum_by_month_30907)
```


### Creating a linear regression model 
```{r}
lm_model2 <- lm(TOTAL_RATE_DIFF ~ TOTAL_VAX_RATE + Intervention + Male_VAX_RATE + Female_VAX_RATE + Age_05_09_VAX_RATE + Age_10_17_VAX_RATE + Age_18_44_VAX_RATE + Age_45_64_VAX_RATE + Age_65Plus_VAX_RATE, data = combined)

summary(lm_model2)
```

### evaluating this model using RMSE 
```{r}
# Split the data into training and testing sets
train <- combined[1:15,]
test <- combined[16:24,]

# Train the linear regression model
model <- lm(Vax_rate ~ Intervention + Male_Total + Female_Total + 
             Age_05_09 + Age_10_17 + Age_18_44 + Age_45_64 + Age_65Plus, 
           data = train)

# Generate predictions for the test data
predictions <- predict(model, newdata = test)

# Calculate RMSE
rmse <- sqrt(mean((test$Vax_rate - predictions)^2))

rmse
```

### Train a LASSO model 
```{r}
Vax_split <- initial_split(combined, strata = Intervention)
Vax_train <- training(Vax_split)
Vax_test <- testing(Vax_split)
```

```{r}
Vax_rec <- recipe(Vax_rate ~ Intervention + Male_Total + Female_Total + 
             Age_05_09 + Age_10_17 + Age_18_44 + Age_45_64 + Age_65Plus, data = Vax_train) %>%
  step_zv(all_numeric(), -all_outcomes()) %>%
  step_normalize(all_numeric(), -all_outcomes()) #centering and scaling data 
```

```{r}
lasso_Vax <- linear_reg(penalty = 0.1, mixture = 1) %>%
  set_engine("glmnet")

wf <- workflow() %>%
  add_recipe(Vax_rec)

lasso_fit <- wf %>%
  add_model(lasso_Vax) %>%
  fit(data = Vax_train)

lasso_fit %>%
  pull_workflow_fit() %>%
  tidy()
```

### Tuning LASSO Parameters
```{r}
set.seed(1234)
Vax_boot <- bootstraps(Vax_train, strata = Intervention)

tune_spec <- linear_reg(penalty = tune(), mixture = 1) %>%
  set_engine("glmnet")

lambda_grid <- grid_regular(penalty(), levels = 50)
```

### Tune the grid
```{r}
set.seed(2020)
lasso_grid <- tune_grid(
  wf %>% add_model(tune_spec),
  resamples = Vax_boot,
  grid = lambda_grid
)
```

### Results 
```{r}
lasso_grid %>%
  collect_metrics()
```

### Visualizing the LASSO results 
```{r}
lasso_grid %>%
  collect_metrics() 

lasso_grid_plot = lasso_grid %>%
  collect_metrics() %>%
  ggplot(aes(penalty, mean, color = .metric)) +
  geom_errorbar(aes(
    ymin = mean - std_err,
    ymax = mean + std_err
  ),
  alpha = 0.5
  ) +
  geom_line(size = 1.5) +
  facet_wrap(~.metric, scales = "free", nrow = 2) +
  scale_x_log10() +
  theme(legend.position = "none")

lasso_grid_plot
```

### Save plot
```{r}
#save figure
ggsave(filename = here("results","lasso_grid_plot.png"), plot=lasso_grid_plot)
```


### Lets pick the LASSO model with the lowest RMSE 
```{r}
lowest_rmse <- lasso_grid %>%
  select_best("rmse", maximize = FALSE)

final_lasso <- finalize_workflow(
  wf %>% add_model(tune_spec),
  lowest_rmse
)
```

### Final fit and viewing most important variables 
```{r}
final_lasso_plot = final_lasso %>%
  fit(Vax_train) %>%
  pull_workflow_fit() %>%
  vi(lambda = lowest_rmse$penalty) %>%
  mutate(
    Importance = abs(Importance),
    Variable = fct_reorder(Variable, Importance)
  ) %>%
  ggplot(aes(x = Importance, y = Variable, fill = Sign)) +
  geom_col() +
  scale_x_continuous(expand = c(0, 0)) +
  labs(y = NULL)
final_lasso_plot
```

### Looking at final fit 
```{r}
last_fit(
  final_lasso,
  Vax_split
) %>%
  collect_metrics()
```

### Save plot
```{r}
#save figure
ggsave(filename = here("results","final_lasso_plot.png"), plot=final_lasso_plot)
```

